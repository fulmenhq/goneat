$schema: https://json-schema.org/draft/2020-12/schema
$id: https://schemas.goneat.dev/config/dates/v1.0.0
$version: 1.0.0
title: Goneat Dates Configuration Schema
description: Configuration schema for Goneat dates validation and fixes
type: object
properties:
  enabled:
    type: boolean
    description: Enable dates validation
    default: true
    examples:
      - true
      - false
  rules:
    type: object
    description: Rule-specific configurations
    properties:
      future_dates:
        type: object
        description: Detect dates in future (e.g., hallucinations)
        properties:
          enabled:
            type: boolean
            description: Enable future dates detection
            default: true
          max_skew:
            type: string
            description: Max future allowance (Go duration format)
            default: "24h"
            pattern: "^\\d+[dhms]$"
            examples:
              - "24h"
              - "1h"
              - "30m"
              - "5d"
          severity:
            type: string
            description: Severity level for future dates
            enum: ["critical", "high", "medium", "low", "info", "error"]
            default: "error"
          auto_fix:
            type: boolean
            description: Auto-replace with today (warn on ambiguity)
            default: true
        additionalProperties: false
      stale_entries:
        type: object
        description: Warn on outdated entries (e.g., old changelogs)
        properties:
          enabled:
            type: boolean
            description: Enable stale entries detection
            default: true
          warn_days:
            type: integer
            description: Days before warning
            minimum: 0
            maximum: 3650
            default: 180
          severity:
            type: string
            description: Severity level for stale entries
            enum: ["critical", "high", "medium", "low", "info", "warning"]
            default: "warning"
        additionalProperties: false
      monotonic_order:
        type: object
        description: Ensure chronological order (e.g., changelog descending)
        properties:
          enabled:
            type: boolean
            description: Enable monotonic order checking
            default: true
          files:
            type: array
            description: Glob patterns for ordering checks
            items:
              type: string
            default: ["CHANGELOG.md"]
            examples:
              - ["CHANGELOG.md", "**/HISTORY.md"]
          severity:
            type: string
            description: Severity level for order violations
            enum: ["critical", "high", "medium", "low", "info", "warning", "error"]
            default: "warning"
        additionalProperties: false
      cross_file_consistency:
        type: object
        description: Coherence across files (e.g., dates match versions)
        properties:
          enabled:
            type: boolean
            description: Enable cross-file consistency checking
            default: false
          groups:
            type: array
            description: Arrays of files to cross-check
            items:
              type: array
              items:
                type: string
            examples:
              - [["CHANGELOG.md", "package.json"], ["VERSION", "Cargo.toml"]]
          severity:
            type: string
            description: Severity level for consistency violations
            enum: ["critical", "high", "medium", "low", "info", "error"]
            default: "error"
        additionalProperties: false
    additionalProperties: false
    required: []
  files:
    type: object
    description: File selection and guards
    properties:
      include:
        type: array
        description: Globs to include (supports ** via doublestar)
        items:
          type: string
        default: ["**/CHANGELOG*.md", "**/HISTORY.md", "**/NEWS.md", "**/VERSION", "**/package.json", "**/Cargo.toml"]
      exclude:
        type: array
        description: Globs to exclude (supports **)
        items:
          type: string
        default: ["**/node_modules/**", "**/.git/**", "**/dist/**", "**/build/**"]
      text_extensions:
        type: array
        description: Advisory extensions (binary sniff overrides)
        items:
          type: string
        default: [".md", ".txt", ".yaml", ".yml", ".json", ".toml"]
      max_file_size_bytes:
        type: integer
        description: Skip larger files (prevent OOM)
        minimum: 0
        default: 4194304
    additionalProperties: false
    required: []
  date_patterns:
    type: array
    description: Order-aware patterns to avoid MM/DD vs DD/MM ambiguity
    items:
      type: object
      properties:
        regex:
          type: string
          description: Regex with 3 capture groups (year, month, day)
        order:
          type: string
          description: Parse order specification
          enum: ["YMD", "MDY", "DMY"]
        description:
          type: string
          description: Human-readable description of the pattern
      required: ["regex", "order"]
      additionalProperties: false
    default:
      - regex: "(\\d{4})-(\\d{2})-(\\d{2})"
        order: "YMD"
        description: "ISO 8601 Standard"
      - regex: "(\\d{1,2})/(\\d{1,2})/(\\d{4})"
        order: "MDY"
        description: "US Format"
      - regex: "(\\d{1,2})\\.(\\d{1,2})\\.(\\d{4})"
        order: "DMY"
        description: "European Format"
  timezone:
    type: string
    description: IANA TZ for parsing/comparison
    default: "UTC"
    examples:
      - "UTC"
      - "America/New_York"
  now:
    type: ["string", "null"]
    description: RFC3339 string to override time.Now() (tests only)
    format: date-time
    default: null
  ai_safety:
    type: object
    description: AI-specific checks (e.g., hallucinations, placeholders)
    properties:
      enabled:
        type: boolean
        description: Enable AI safety checks
        default: true
      detect_placeholders:
        type: boolean
        description: Detect placeholder dates like [DATE], YYYY-MM-DD
        default: true
      detect_impossible:
        type: boolean
        description: Detect impossible dates like Feb 30, invalid months
        default: true
      severity:
        type: string
        description: Severity level for AI safety violations
        enum: ["critical", "high", "medium", "low", "info", "warning"]
        default: "warning"
    additionalProperties: false
    required: []
  output:
    type: object
    description: CLI output control
    properties:
      format:
        type: string
        description: Output format
        enum: ["text", "json", "sarif", "markdown"]
        default: "text"
      fail_on:
        type: string
        description: Exit 1 on severity level
        enum: ["error", "warning", "any"]
        default: "error"
    additionalProperties: false
    required: []
additionalProperties: false
required: []
