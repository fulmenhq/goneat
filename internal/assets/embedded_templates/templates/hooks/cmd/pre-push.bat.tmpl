@echo off
REM CMD hook template for goneat pre-push validation
REM Generated by goneat hooks generate
REM Schema-compliant hook template (CMD)

setlocal enabledelayedexpansion

REM Resolve repository root for reliable relative paths
for /f "tokens=*" %%i in ('git rev-parse --show-toplevel 2^>nul') do set "REPO_ROOT=%%i"
if errorlevel 1 (
    set "REPO_ROOT=%CD%"
)

REM Resolve goneat home for ephemeral artifacts (reports/cache/tmp)
REM Repo .goneat/ is static-only; do not write reports here.
if defined GONEAT_HOME (
    set "GONEAT_HOME=%GONEAT_HOME%"
) else (
    set "GONEAT_HOME=%USERPROFILE%\.goneat"
)

REM Detect dev mode: enabled if .goneat/dev-mode exists or env is set
set "DEV_MODE=0"
if exist "%REPO_ROOT%\.goneat\dev-mode" set "DEV_MODE=1"
if "%GONEAT_DEV_MODE%"=="1" set "DEV_MODE=1"

echo üöÄ Running goneat pre-push validation...

REM Robust binary discovery (prefer repo build first, then PATH/common locations)
set "GONEAT_BIN="

REM Check repo dist directory
if exist "%REPO_ROOT%\dist\goneat.exe" (
    set "GONEAT_BIN=%REPO_ROOT%\dist\goneat.exe"
    goto :found_binary
)
if exist "%REPO_ROOT%\dist\goneat" (
    set "GONEAT_BIN=%REPO_ROOT%\dist\goneat"
    goto :found_binary
)

REM Check common locations
for %%i in (
    "%GOPATH%\bin\goneat.exe"
    "%GOPATH%\bin\goneat"
    "%USERPROFILE%\go\bin\goneat.exe"
    "%USERPROFILE%\go\bin\goneat"
    "%USERPROFILE%\.local\bin\goneat.exe"
    "%USERPROFILE%\.local\bin\goneat"
    "%USERPROFILE%\.goneat\bin\goneat.exe"
    "%USERPROFILE%\.goneat\bin\goneat"
    "goneat.exe"
    "goneat"
) do (
    if exist "%%~i" (
        set "GONEAT_BIN=%%~i"
        goto :found_binary
    )
    REM Also try where command
    where "%%~i" >nul 2>&1
    if !errorlevel! equ 0 (
        set "GONEAT_BIN=%%~i"
        goto :found_binary
    )
)

:found_binary
if "%GONEAT_BIN%"=="" (
    if "%DEV_MODE%"=="1" (
        echo ‚ö†Ô∏è  goneat not found (dev mode). Using fallback validation
        {{- if .Fallback }}
        {{ .Fallback }}
        {{- else }}
        echo Skipping validation - goneat not available
        {{- end }}
        exit /b 0
    ) else (
        echo ‚ùå goneat CLI not found. Pre-push validation requires goneat.
        echo üëâ Install options:
        echo    - Go:   go install github.com/fulmenhq/goneat@latest
        echo    - Scoop: scoop install goneat
        echo    - Releases: https://github.com/fulmenhq/goneat/releases
        echo üîé Searched: %REPO_ROOT%\dist, %GOPATH%\bin, %USERPROFILE%\go\bin, %USERPROFILE%\.local\bin, %USERPROFILE%\.goneat\bin
        echo üí° Tip: Ensure Go bin directory is in PATH
        exit /b 1
    )
)

REM Use goneat's orchestrated assessment (manifest-driven)
set "ARGS=assess --hook pre-push --hook-manifest "%REPO_ROOT%\.goneat\hooks.yaml""

{{- if or .OptimizationSettings.OnlyChangedFiles (eq .OptimizationSettings.ContentSource "index") }}
set "ARGS=%ARGS% --staged-only"
{{- end }}

{{- range .Args }}
set "ARGS=%ARGS% {{ . }}"
{{- end }}

"%GONEAT_BIN%" %ARGS%

if errorlevel 1 (
    exit /b %errorlevel%
)

echo ‚úÖ Pre-push validation passed!
exit /b 0
