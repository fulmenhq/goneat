scopes:
  foundation:
    description: "Core foundation tools required for goneat and basic AI agent operation"
    tools: ["mise", "ripgrep", "jq", "yamlfmt", "prettier"]
    replace: true
  project-go:
    description: "Go language project development tools"
    tools: ["golangci", "go-licenses", "gosec", "govulncheck"]
  sbom:
    description: "SBOM generation and supply chain security tools"
    tools: ["syft"]
  custom:
    description: "Custom tools for testing"
    tools: ["custom-tool"]

tools:
  mise:
    name: "mise"
    description: "Polyglot runtime manager for Linux/macOS"
    kind: "system"
    detect_command: "mise --version"
    platforms: ["linux", "darwin"]
    install_commands:
      linux: "curl https://mise.jdx.dev/install.sh | sh && echo 'ðŸ“¦ mise installed. Restart your shell or run: source ~/.bashrc'"
      darwin: "curl https://mise.jdx.dev/install.sh | sh && echo 'ðŸ“¦ mise installed. Restart your shell or run: source ~/.zshrc'"
  ripgrep:
    name: "ripgrep"
    description: "Fast text search tool for license auditing"
    kind: "system"
    detect_command: "rg --version"
    platforms: ["linux", "darwin", "windows"]
    install_commands:
      linux: "mise use ripgrep@latest 2>/dev/null || echo 'ðŸ“¦ Run: sudo apt-get install ripgrep' && exit 1"
      darwin: "mise use ripgrep@latest || brew install ripgrep"
      windows: "winget install BurntSushi.ripgrep.MSVC || scoop install ripgrep"
  jq:
    name: "jq"
    description: "JSON processing tool for CI/CD scripts"
    kind: "system"
    detect_command: "jq --version"
    version_scheme: "lexical"
    minimum_version: "1.6"
    recommended_version: "1.7"
    platforms: ["linux", "darwin", "windows"]
    install_commands:
      linux: "mise use jq@latest 2>/dev/null || echo 'ðŸ“¦ Run: sudo apt-get install jq' && exit 1"
      darwin: "mise use jq@latest || brew install jq"
      windows: "winget install jqlang.jq || scoop install jq"
  golangci:
    name: "golangci-lint"
    description: "Fast linters Runner for Go"
    kind: "system"
    detect_command: "golangci-lint --version"
    version_scheme: "semver"
    minimum_version: "2.0.0"
    recommended_version: "2.4.0"
    platforms: ["linux", "darwin", "windows"]
    install_commands:
      linux: "go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest || mise use golangci-lint@latest"
      darwin: "go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest || mise use golangci-lint@latest"
      windows: "go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest || mise use golangci-lint@latest"
  go-licenses:
     name: "go-licenses"
     description: "License compliance checking for Go dependencies"
     kind: "go"
     install_package: "github.com/google/go-licenses@latest"
     detect_command: "go-licenses --help"
     platforms: ["linux", "darwin", "windows"]
  gosec:
    name: "gosec"
    description: "Go security linter that identifies security issues in Go code"
    kind: "system"
    detect_command: "gosec --version"
    platforms: ["linux", "darwin", "windows"]
    install_commands:
      linux: "go install github.com/securego/gosec/v2/cmd/gosec@latest"
      darwin: "go install github.com/securego/gosec/v2/cmd/gosec@latest"
      windows: "go install github.com/securego/gosec/v2/cmd/gosec@latest"
  govulncheck:
    name: "govulncheck"
    description: "Go vulnerability database checker for Go dependencies"
    kind: "system"
    detect_command: "govulncheck --version"
    platforms: ["linux", "darwin", "windows"]
    install_commands:
      linux: "go install golang.org/x/vuln/cmd/govulncheck@latest"
      darwin: "go install golang.org/x/vuln/cmd/govulncheck@latest"
      windows: "go install golang.org/x/vuln/cmd/govulncheck@latest"
  yamlfmt:
    name: "yamlfmt"
    description: "YAML formatter for configuration files"
    kind: "system"
    detect_command: "yamlfmt --version"
    version_scheme: "semver"
    minimum_version: "0.10.0"
    recommended_version: "0.12.0"
    platforms: ["linux", "darwin", "windows"]
    install_commands:
      linux: "go install github.com/google/yamlfmt/cmd/yamlfmt@latest || mise use yamlfmt@latest"
      darwin: "go install github.com/google/yamlfmt/cmd/yamlfmt@latest || mise use yamlfmt@latest"
      windows: "go install github.com/google/yamlfmt/cmd/yamlfmt@latest || mise use yamlfmt@latest"
  prettier:
    name: "prettier"
    description: "Code formatter for Markdown and other formats"
    kind: "system"
    detect_command: "prettier --version"
    version_scheme: "semver"
    minimum_version: "3.0.0"
    recommended_version: "3.3.0"
    platforms: ["linux", "darwin", "windows"]
    install_commands:
      linux: "mise use prettier@latest 2>/dev/null || npm install -g prettier"
      darwin: "mise use prettier@latest || npm install -g prettier"
      windows: "mise use prettier@latest || npm install -g prettier"
  syft:
    name: "syft"
    description: "SBOM generation tool for software supply chain security with verified artifact installation"
    kind: "system"
    detect_command: "syft version"
    version_scheme: "semver"
    minimum_version: "1.0.0"
    recommended_version: "1.33.0"
    platforms: ["linux", "darwin", "windows"]
    artifacts:
      default_version: "1.33.0"
      versions:
        "1.33.0":
          darwin_amd64:
            url: "https://github.com/anchore/syft/releases/download/v1.33.0/syft_1.33.0_darwin_amd64.tar.gz"
            sha256: "90c4f6b6c4bbef5c1c28de84de9920ff862dbb779bfea326feb28bacba479c34"
          darwin_arm64:
            url: "https://github.com/anchore/syft/releases/download/v1.33.0/syft_1.33.0_darwin_arm64.tar.gz"
            sha256: "3ce47ab610260c5acfe6cc5991e250e08b3b9b36812abafb56db817569e0348b"
          linux_amd64:
            url: "https://github.com/anchore/syft/releases/download/v1.33.0/syft_1.33.0_linux_amd64.tar.gz"
            sha256: "adc1b944a827ed3432bcd9f1dbdbc8fa3c0dca7d3d449e7084c90248c2c6cb50"
          linux_arm64:
            url: "https://github.com/anchore/syft/releases/download/v1.33.0/syft_1.33.0_linux_arm64.tar.gz"
            sha256: "6688be30048149df88e5959a756dbab086022a04d0f7497790cd298a9669f49d"
          windows_amd64:
            url: "https://github.com/anchore/syft/releases/download/v1.33.0/syft_1.33.0_windows_amd64.zip"
            sha256: "0e1326e27a5e48102d9f806eb03b9c80d3d5e7b78abfd19a04887b2a0edd22b7"
  custom-tool:
    name: "custom-tool"
    description: "A custom tool for testing"
    kind: "system"
    detect_command: "custom-tool --version"
    platforms: ["linux"]
    install_commands:
      linux: "echo 'Custom tool install command'"
