# Semantic Versioning Test Fixtures - FULL Mode
# Comprehensive semver validation honoring prerelease ordering and build metadata
# Follows SemVer 2.0.0 specification completely

# VALID CASES - These should parse successfully

## Standard SemVer (x.y.z)
1.0.0
1.2.3
2.0.0
10.20.30
0.1.0
0.0.1
999.999.999

## With v Prefix
v1.0.0
v1.2.3
v2.0.0
v10.20.30

## Prerelease Versions (precedence: alpha < beta < rc)
1.0.0-alpha
1.0.0-alpha.1
1.0.0-beta
1.0.0-beta.1
1.0.0-beta.2
1.0.0-rc.1
1.0.0-rc.2
1.0.0-rc.10
1.0.0-rc.11
2.0.0-alpha.1

## Build Metadata (ignored for precedence)
1.0.0+build.1
1.0.0+build.123
1.2.3+20250101
1.2.3+git.abc123
1.2.3+git.abc123.def456

## Complex Combinations (prerelease + build metadata)
1.0.0-alpha.1+build.123
2.0.0-beta.2+20250101.abc123
10.5.0-rc.1+build.456
1.0.0-alpha+build.123
1.0.0-beta.1+git.abc123

# INVALID CASES - These should cause validation errors

## Malformed Prerelease (invalid identifiers)
1.0.0-=rc.red    # Invalid: starts with = instead of -
1.0.0-rc.red     # Invalid: non-numeric identifier in prerelease
1.0.0-alpha..1   # Invalid: double dots in prerelease
1.0.0-alpha+     # Invalid: empty build metadata after +
1.0.0-rc.2       # Valid: should sort before rc.11
1.0.0-rc.11      # Valid: should sort after rc.2 (natural sorting)

## Malformed Build Metadata
1.0.0+build..123  # Invalid: double dots
1.0.0+build.123.  # Invalid: trailing dot
1.0.0+.build      # Invalid: leading dot

## Invalid Numeric Components
1.0.0-alpha.01   # Invalid: leading zero in prerelease
1.0.0+build.01   # Invalid: leading zero in build metadata

## Empty Components
1..0              # Invalid: empty minor version
1.0.              # Invalid: empty patch version
1.0.0-            # Invalid: empty prerelease
1.0.0+            # Invalid: empty build metadata